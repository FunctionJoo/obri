plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.4'
    id 'io.spring.dependency-management' version '1.1.3'
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
    id 'jacoco'
}

group = 'com'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    asciidoctorExt
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('snippetsDir', file("build/generated-snippets"))
}

dependencies {

    // spring
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
//    implementation 'org.springframework.boot:spring-boot-starter-security'

    // db
    runtimeOnly 'com.mysql:mysql-connector-j'

    // dev
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'


    // test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // api doc
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    implementation "org.springdoc:springdoc-openapi-ui:1.7.0"

    // Monitoring
//    implementation 'org.springframework.boot:spring-boot-starter-actuator'
//    implementation 'io.micrometer:micrometer-registry-prometheus'

    // docker compose
    developmentOnly 'org.springframework.boot:spring-boot-docker-compose'

}

tasks.named('test') {
    outputs.dir snippetsDir
    useJUnitPlatform()
}

tasks.named('asciidoctor') {
    inputs.dir snippetsDir
    dependsOn test
}
